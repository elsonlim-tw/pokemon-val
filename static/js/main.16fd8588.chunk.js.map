{"version":3,"sources":["pokemon/pokemon.js","PokemonType.js","PokemonCard.js","components/SearchBox.js","components/PokemonGallery.js","App.js","serviceWorker.js","index.js"],"names":["POKEMON","getTypeClassName","type","toLowerCase","PokemonType","aSingleType","className","PokemonCard","pokemon","id","name","base","src","process","alt","english","map","t","key","Object","entries","eachBase","SearchBox","value","onChange","PokemonGallery","props","changeSearchText","event","setState","searchText","target","state","pokemonData","filter","aPokemon","startsWith","filteredPokemon","this","getFilteredPokemon","p","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.16fd8588.chunk.js","sourcesContent":["const POKEMON = [\n  {\n    \"id\": 1,\n    \"name\": {\n      \"english\": \"Bulbasaur\",\n      \"japanese\": \"フシギダネ\",\n      \"chinese\": \"妙蛙种子\"\n    },\n    \"type\": [\n      \"Grass\",\n      \"Poison\"\n    ],\n    \"base\": {\n      \"HP\": 45,\n      \"Attack\": 49,\n      \"Defence\": 49,\n      \"SpAttack\": 65,\n      \"SpDefence\": 65,\n      \"Speed\": 45\n    }\n  },\n  {\n    \"id\": 2,\n    \"name\": {\n      \"english\": \"Ivysaur\",\n      \"japanese\": \"フシギソウ\",\n      \"chinese\": \"妙蛙草\"\n    },\n    \"type\": [\n      \"Grass\",\n      \"Poison\"\n    ],\n    \"base\": {\n      \"HP\": 60,\n      \"Attack\": 62,\n      \"Defence\": 63,\n      \"SpAttack\": 80,\n      \"SpDefence\": 80,\n      \"Speed\": 60\n    }\n  },\n  {\n    \"id\": 3,\n    \"name\": {\n      \"english\": \"Venusaur\",\n      \"japanese\": \"フシギバナ\",\n      \"chinese\": \"妙蛙花\"\n    },\n    \"type\": [\n      \"Grass\",\n      \"Poison\"\n    ],\n    \"base\": {\n      \"HP\": 80,\n      \"Attack\": 82,\n      \"Defence\": 83,\n      \"SpAttack\": 100,\n      \"SpDefence\": 100,\n      \"Speed\": 80\n    }\n  },\n  {\n    \"id\": 4,\n    \"name\": {\n      \"english\": \"Charmander\",\n      \"japanese\": \"ヒトカゲ\",\n      \"chinese\": \"小火龙\"\n    },\n    \"type\": [\n      \"Fire\"\n    ],\n    \"base\": {\n      \"HP\": 39,\n      \"Attack\": 52,\n      \"Defence\": 43,\n      \"SpAttack\": 60,\n      \"SpDefence\": 50,\n      \"Speed\": 65\n    }\n  },\n  {\n    \"id\": 5,\n    \"name\": {\n      \"english\": \"Charmeleon\",\n      \"japanese\": \"リザード\",\n      \"chinese\": \"火恐龙\"\n    },\n    \"type\": [\n      \"Fire\"\n    ],\n    \"base\": {\n      \"HP\": 58,\n      \"Attack\": 64,\n      \"Defence\": 58,\n      \"SpAttack\": 80,\n      \"SpDefence\": 65,\n      \"Speed\": 80\n    }\n  },\n  {\n    \"id\": 6,\n    \"name\": {\n      \"english\": \"Charizard\",\n      \"japanese\": \"リザードン\",\n      \"chinese\": \"喷火龙\"\n    },\n    \"type\": [\n      \"Fire\",\n      \"Flying\"\n    ],\n    \"base\": {\n      \"HP\": 78,\n      \"Attack\": 84,\n      \"Defence\": 78,\n      \"SpAttack\": 109,\n      \"SpDefence\": 85,\n      \"Speed\": 100\n    }\n  },\n  {\n    \"id\": 7,\n    \"name\": {\n      \"english\": \"Squirtle\",\n      \"japanese\": \"ゼニガメ\",\n      \"chinese\": \"杰尼龟\"\n    },\n    \"type\": [\n      \"Water\"\n    ],\n    \"base\": {\n      \"HP\": 44,\n      \"Attack\": 48,\n      \"Defence\": 65,\n      \"SpAttack\": 50,\n      \"SpDefence\": 64,\n      \"Speed\": 43\n    }\n  },\n  {\n    \"id\": 8,\n    \"name\": {\n      \"english\": \"Wartortle\",\n      \"japanese\": \"カメール\",\n      \"chinese\": \"卡咪龟\"\n    },\n    \"type\": [\n      \"Water\"\n    ],\n    \"base\": {\n      \"HP\": 59,\n      \"Attack\": 63,\n      \"Defence\": 80,\n      \"SpAttack\": 65,\n      \"SpDefence\": 80,\n      \"Speed\": 58\n    }\n  },\n  {\n    \"id\": 9,\n    \"name\": {\n      \"english\": \"Blastoise\",\n      \"japanese\": \"カメックス\",\n      \"chinese\": \"水箭龟\"\n    },\n    \"type\": [\n      \"Water\"\n    ],\n    \"base\": {\n      \"HP\": 79,\n      \"Attack\": 83,\n      \"Defence\": 100,\n      \"SpAttack\": 85,\n      \"SpDefence\": 105,\n      \"Speed\": 78\n    }\n  },\n  {\n    \"id\": 10,\n    \"name\": {\n      \"english\": \"Caterpie\",\n      \"japanese\": \"キャタピー\",\n      \"chinese\": \"绿毛虫\"\n    },\n    \"type\": [\n      \"Bug\"\n    ],\n    \"base\": {\n      \"HP\": 45,\n      \"Attack\": 30,\n      \"Defence\": 35,\n      \"SpAttack\": 20,\n      \"SpDefence\": 20,\n      \"Speed\": 45\n    }\n  },\n  {\n    \"id\": 11,\n    \"name\": {\n      \"english\": \"Metapod\",\n      \"japanese\": \"トランセル\",\n      \"chinese\": \"铁甲蛹\"\n    },\n    \"type\": [\n      \"Bug\"\n    ],\n    \"base\": {\n      \"HP\": 50,\n      \"Attack\": 20,\n      \"Defence\": 55,\n      \"SpAttack\": 25,\n      \"SpDefence\": 25,\n      \"Speed\": 30\n    }\n  },\n  {\n    \"id\": 12,\n    \"name\": {\n      \"english\": \"Butterfree\",\n      \"japanese\": \"バタフリー\",\n      \"chinese\": \"巴大蝶\"\n    },\n    \"type\": [\n      \"Bug\",\n      \"Flying\"\n    ],\n    \"base\": {\n      \"HP\": 60,\n      \"Attack\": 45,\n      \"Defence\": 50,\n      \"SpAttack\": 90,\n      \"SpDefence\": 80,\n      \"Speed\": 70\n    }\n  },\n  {\n    \"id\": 13,\n    \"name\": {\n      \"english\": \"Weedle\",\n      \"japanese\": \"ビードル\",\n      \"chinese\": \"独角虫\"\n    },\n    \"type\": [\n      \"Bug\",\n      \"Poison\"\n    ],\n    \"base\": {\n      \"HP\": 40,\n      \"Attack\": 35,\n      \"Defence\": 30,\n      \"SpAttack\": 20,\n      \"SpDefence\": 20,\n      \"Speed\": 50\n    }\n  },\n  {\n    \"id\": 14,\n    \"name\": {\n      \"english\": \"Kakuna\",\n      \"japanese\": \"コクーン\",\n      \"chinese\": \"铁壳蛹\"\n    },\n    \"type\": [\n      \"Bug\",\n      \"Poison\"\n    ],\n    \"base\": {\n      \"HP\": 45,\n      \"Attack\": 25,\n      \"Defence\": 50,\n      \"SpAttack\": 25,\n      \"SpDefence\": 25,\n      \"Speed\": 35\n    }\n  },\n  {\n    \"id\": 15,\n    \"name\": {\n      \"english\": \"Beedrill\",\n      \"japanese\": \"スピアー\",\n      \"chinese\": \"大针蜂\"\n    },\n    \"type\": [\n      \"Bug\",\n      \"Poison\"\n    ],\n    \"base\": {\n      \"HP\": 65,\n      \"Attack\": 90,\n      \"Defence\": 40,\n      \"SpAttack\": 45,\n      \"SpDefence\": 80,\n      \"Speed\": 75\n    }\n  },\n  {\n    \"id\": 16,\n    \"name\": {\n      \"english\": \"Pidgey\",\n      \"japanese\": \"ポッポ\",\n      \"chinese\": \"波波\"\n    },\n    \"type\": [\n      \"Normal\",\n      \"Flying\"\n    ],\n    \"base\": {\n      \"HP\": 40,\n      \"Attack\": 45,\n      \"Defence\": 40,\n      \"SpAttack\": 35,\n      \"SpDefence\": 35,\n      \"Speed\": 56\n    }\n  },\n  {\n    \"id\": 17,\n    \"name\": {\n      \"english\": \"Pidgeotto\",\n      \"japanese\": \"ピジョン\",\n      \"chinese\": \"比比鸟\"\n    },\n    \"type\": [\n      \"Normal\",\n      \"Flying\"\n    ],\n    \"base\": {\n      \"HP\": 63,\n      \"Attack\": 60,\n      \"Defence\": 55,\n      \"SpAttack\": 50,\n      \"SpDefence\": 50,\n      \"Speed\": 71\n    }\n  },\n  {\n    \"id\": 18,\n    \"name\": {\n      \"english\": \"Pidgeot\",\n      \"japanese\": \"ピジョット\",\n      \"chinese\": \"大比鸟\"\n    },\n    \"type\": [\n      \"Normal\",\n      \"Flying\"\n    ],\n    \"base\": {\n      \"HP\": 83,\n      \"Attack\": 80,\n      \"Defence\": 75,\n      \"SpAttack\": 70,\n      \"SpDefence\": 70,\n      \"Speed\": 101\n    }\n  },\n  {\n    \"id\": 19,\n    \"name\": {\n      \"english\": \"Rattata\",\n      \"japanese\": \"コラッタ\",\n      \"chinese\": \"小拉达\"\n    },\n    \"type\": [\n      \"Normal\"\n    ],\n    \"base\": {\n      \"HP\": 30,\n      \"Attack\": 56,\n      \"Defence\": 35,\n      \"SpAttack\": 25,\n      \"SpDefence\": 35,\n      \"Speed\": 72\n    }\n  },\n  {\n    \"id\": 20,\n    \"name\": {\n      \"english\": \"Raticate\",\n      \"japanese\": \"ラッタ\",\n      \"chinese\": \"拉达\"\n    },\n    \"type\": [\n      \"Normal\"\n    ],\n    \"base\": {\n      \"HP\": 55,\n      \"Attack\": 81,\n      \"Defence\": 60,\n      \"SpAttack\": 50,\n      \"SpDefence\": 70,\n      \"Speed\": 97\n    }\n  },\n  {\n    \"id\": 21,\n    \"name\": {\n      \"english\": \"Spearow\",\n      \"japanese\": \"オニスズメ\",\n      \"chinese\": \"烈雀\"\n    },\n    \"type\": [\n      \"Normal\",\n      \"Flying\"\n    ],\n    \"base\": {\n      \"HP\": 40,\n      \"Attack\": 60,\n      \"Defence\": 30,\n      \"SpAttack\": 31,\n      \"SpDefence\": 31,\n      \"Speed\": 70\n    }\n  },\n  {\n    \"id\": 22,\n    \"name\": {\n      \"english\": \"Fearow\",\n      \"japanese\": \"オニドリル\",\n      \"chinese\": \"大嘴雀\"\n    },\n    \"type\": [\n      \"Normal\",\n      \"Flying\"\n    ],\n    \"base\": {\n      \"HP\": 65,\n      \"Attack\": 90,\n      \"Defence\": 65,\n      \"SpAttack\": 61,\n      \"SpDefence\": 61,\n      \"Speed\": 100\n    }\n  },\n  {\n    \"id\": 23,\n    \"name\": {\n      \"english\": \"Ekans\",\n      \"japanese\": \"アーボ\",\n      \"chinese\": \"阿柏蛇\"\n    },\n    \"type\": [\n      \"Poison\"\n    ],\n    \"base\": {\n      \"HP\": 35,\n      \"Attack\": 60,\n      \"Defence\": 44,\n      \"SpAttack\": 40,\n      \"SpDefence\": 54,\n      \"Speed\": 55\n    }\n  },\n  {\n    \"id\": 24,\n    \"name\": {\n      \"english\": \"Arbok\",\n      \"japanese\": \"アーボック\",\n      \"chinese\": \"阿柏怪\"\n    },\n    \"type\": [\n      \"Poison\"\n    ],\n    \"base\": {\n      \"HP\": 60,\n      \"Attack\": 95,\n      \"Defence\": 69,\n      \"SpAttack\": 65,\n      \"SpDefence\": 79,\n      \"Speed\": 80\n    }\n  },\n  {\n    \"id\": 25,\n    \"name\": {\n      \"english\": \"Pikachu\",\n      \"japanese\": \"ピカチュウ\",\n      \"chinese\": \"皮卡丘\"\n    },\n    \"type\": [\n      \"Electric\"\n    ],\n    \"base\": {\n      \"HP\": 35,\n      \"Attack\": 55,\n      \"Defence\": 40,\n      \"SpAttack\": 50,\n      \"SpDefence\": 50,\n      \"Speed\": 90\n    }\n  },\n  {\n    \"id\": 26,\n    \"name\": {\n      \"english\": \"Raichu\",\n      \"japanese\": \"ライチュウ\",\n      \"chinese\": \"雷丘\"\n    },\n    \"type\": [\n      \"Electric\"\n    ],\n    \"base\": {\n      \"HP\": 60,\n      \"Attack\": 90,\n      \"Defence\": 55,\n      \"SpAttack\": 90,\n      \"SpDefence\": 80,\n      \"Speed\": 110\n    }\n  },\n  {\n    \"id\": 27,\n    \"name\": {\n      \"english\": \"Sandshrew\",\n      \"japanese\": \"サンド\",\n      \"chinese\": \"穿山鼠\"\n    },\n    \"type\": [\n      \"Ground\"\n    ],\n    \"base\": {\n      \"HP\": 50,\n      \"Attack\": 75,\n      \"Defence\": 85,\n      \"SpAttack\": 20,\n      \"SpDefence\": 30,\n      \"Speed\": 40\n    }\n  },\n  {\n    \"id\": 28,\n    \"name\": {\n      \"english\": \"Sandslash\",\n      \"japanese\": \"サンドパン\",\n      \"chinese\": \"穿山王\"\n    },\n    \"type\": [\n      \"Ground\"\n    ],\n    \"base\": {\n      \"HP\": 75,\n      \"Attack\": 100,\n      \"Defence\": 110,\n      \"SpAttack\": 45,\n      \"SpDefence\": 55,\n      \"Speed\": 65\n    }\n  },\n  {\n    \"id\": 29,\n    \"name\": {\n      \"english\": \"Nidoran♀\",\n      \"japanese\": \"ニドラン♀\",\n      \"chinese\": \"尼多兰\"\n    },\n    \"type\": [\n      \"Poison\"\n    ],\n    \"base\": {\n      \"HP\": 55,\n      \"Attack\": 47,\n      \"Defence\": 52,\n      \"SpAttack\": 40,\n      \"SpDefence\": 40,\n      \"Speed\": 41\n    }\n  },\n  {\n    \"id\": 30,\n    \"name\": {\n      \"english\": \"Nidorina\",\n      \"japanese\": \"ニドリーナ\",\n      \"chinese\": \"尼多娜\"\n    },\n    \"type\": [\n      \"Poison\"\n    ],\n    \"base\": {\n      \"HP\": 70,\n      \"Attack\": 62,\n      \"Defence\": 67,\n      \"SpAttack\": 55,\n      \"SpDefence\": 55,\n      \"Speed\": 56\n    }\n  },\n  {\n    \"id\": 31,\n    \"name\": {\n      \"english\": \"Nidoqueen\",\n      \"japanese\": \"ニドクイン\",\n      \"chinese\": \"尼多后\"\n    },\n    \"type\": [\n      \"Poison\",\n      \"Ground\"\n    ],\n    \"base\": {\n      \"HP\": 90,\n      \"Attack\": 92,\n      \"Defence\": 87,\n      \"SpAttack\": 75,\n      \"SpDefence\": 85,\n      \"Speed\": 76\n    }\n  },\n  {\n    \"id\": 32,\n    \"name\": {\n      \"english\": \"Nidoran♂\",\n      \"japanese\": \"ニドラン♂\",\n      \"chinese\": \"尼多朗\"\n    },\n    \"type\": [\n      \"Poison\"\n    ],\n    \"base\": {\n      \"HP\": 46,\n      \"Attack\": 57,\n      \"Defence\": 40,\n      \"SpAttack\": 40,\n      \"SpDefence\": 40,\n      \"Speed\": 50\n    }\n  },\n  {\n    \"id\": 33,\n    \"name\": {\n      \"english\": \"Nidorino\",\n      \"japanese\": \"ニドリーノ\",\n      \"chinese\": \"尼多力诺\"\n    },\n    \"type\": [\n      \"Poison\"\n    ],\n    \"base\": {\n      \"HP\": 61,\n      \"Attack\": 72,\n      \"Defence\": 57,\n      \"SpAttack\": 55,\n      \"SpDefence\": 55,\n      \"Speed\": 65\n    }\n  },\n  {\n    \"id\": 34,\n    \"name\": {\n      \"english\": \"Nidoking\",\n      \"japanese\": \"ニドキング\",\n      \"chinese\": \"尼多王\"\n    },\n    \"type\": [\n      \"Poison\",\n      \"Ground\"\n    ],\n    \"base\": {\n      \"HP\": 81,\n      \"Attack\": 102,\n      \"Defence\": 77,\n      \"SpAttack\": 85,\n      \"SpDefence\": 75,\n      \"Speed\": 85\n    }\n  },\n  {\n    \"id\": 35,\n    \"name\": {\n      \"english\": \"Clefairy\",\n      \"japanese\": \"ピッピ\",\n      \"chinese\": \"皮皮\"\n    },\n    \"type\": [\n      \"Fairy\"\n    ],\n    \"base\": {\n      \"HP\": 70,\n      \"Attack\": 45,\n      \"Defence\": 48,\n      \"SpAttack\": 60,\n      \"SpDefence\": 65,\n      \"Speed\": 35\n    }\n  },\n  {\n    \"id\": 36,\n    \"name\": {\n      \"english\": \"Clefable\",\n      \"japanese\": \"ピクシー\",\n      \"chinese\": \"皮可西\"\n    },\n    \"type\": [\n      \"Fairy\"\n    ],\n    \"base\": {\n      \"HP\": 95,\n      \"Attack\": 70,\n      \"Defence\": 73,\n      \"SpAttack\": 95,\n      \"SpDefence\": 90,\n      \"Speed\": 60\n    }\n  },\n  {\n    \"id\": 37,\n    \"name\": {\n      \"english\": \"Vulpix\",\n      \"japanese\": \"ロコン\",\n      \"chinese\": \"六尾\"\n    },\n    \"type\": [\n      \"Fire\"\n    ],\n    \"base\": {\n      \"HP\": 38,\n      \"Attack\": 41,\n      \"Defence\": 40,\n      \"SpAttack\": 50,\n      \"SpDefence\": 65,\n      \"Speed\": 65\n    }\n  },\n  {\n    \"id\": 38,\n    \"name\": {\n      \"english\": \"Ninetales\",\n      \"japanese\": \"キュウコン\",\n      \"chinese\": \"九尾\"\n    },\n    \"type\": [\n      \"Fire\"\n    ],\n    \"base\": {\n      \"HP\": 73,\n      \"Attack\": 76,\n      \"Defence\": 75,\n      \"SpAttack\": 81,\n      \"SpDefence\": 100,\n      \"Speed\": 100\n    }\n  },\n  {\n    \"id\": 39,\n    \"name\": {\n      \"english\": \"Jigglypuff\",\n      \"japanese\": \"プリン\",\n      \"chinese\": \"胖丁\"\n    },\n    \"type\": [\n      \"Normal\",\n      \"Fairy\"\n    ],\n    \"base\": {\n      \"HP\": 115,\n      \"Attack\": 45,\n      \"Defence\": 20,\n      \"SpAttack\": 45,\n      \"SpDefence\": 25,\n      \"Speed\": 20\n    }\n  },\n  {\n    \"id\": 40,\n    \"name\": {\n      \"english\": \"Wigglytuff\",\n      \"japanese\": \"プクリン\",\n      \"chinese\": \"胖可丁\"\n    },\n    \"type\": [\n      \"Normal\",\n      \"Fairy\"\n    ],\n    \"base\": {\n      \"HP\": 140,\n      \"Attack\": 70,\n      \"Defence\": 45,\n      \"SpAttack\": 85,\n      \"SpDefence\": 50,\n      \"Speed\": 45\n    }\n  },\n  {\n    \"id\": 41,\n    \"name\": {\n      \"english\": \"Zubat\",\n      \"japanese\": \"ズバット\",\n      \"chinese\": \"超音蝠\"\n    },\n    \"type\": [\n      \"Poison\",\n      \"Flying\"\n    ],\n    \"base\": {\n      \"HP\": 40,\n      \"Attack\": 45,\n      \"Defence\": 35,\n      \"SpAttack\": 30,\n      \"SpDefence\": 40,\n      \"Speed\": 55\n    }\n  },\n  {\n    \"id\": 42,\n    \"name\": {\n      \"english\": \"Golbat\",\n      \"japanese\": \"ゴルバット\",\n      \"chinese\": \"大嘴蝠\"\n    },\n    \"type\": [\n      \"Poison\",\n      \"Flying\"\n    ],\n    \"base\": {\n      \"HP\": 75,\n      \"Attack\": 80,\n      \"Defence\": 70,\n      \"SpAttack\": 65,\n      \"SpDefence\": 75,\n      \"Speed\": 90\n    }\n  },\n  {\n    \"id\": 43,\n    \"name\": {\n      \"english\": \"Oddish\",\n      \"japanese\": \"ナゾノクサ\",\n      \"chinese\": \"走路草\"\n    },\n    \"type\": [\n      \"Grass\",\n      \"Poison\"\n    ],\n    \"base\": {\n      \"HP\": 45,\n      \"Attack\": 50,\n      \"Defence\": 55,\n      \"SpAttack\": 75,\n      \"SpDefence\": 65,\n      \"Speed\": 30\n    }\n  },\n  {\n    \"id\": 44,\n    \"name\": {\n      \"english\": \"Gloom\",\n      \"japanese\": \"クサイハナ\",\n      \"chinese\": \"臭臭花\"\n    },\n    \"type\": [\n      \"Grass\",\n      \"Poison\"\n    ],\n    \"base\": {\n      \"HP\": 60,\n      \"Attack\": 65,\n      \"Defence\": 70,\n      \"SpAttack\": 85,\n      \"SpDefence\": 75,\n      \"Speed\": 40\n    }\n  },\n  {\n    \"id\": 45,\n    \"name\": {\n      \"english\": \"Vileplume\",\n      \"japanese\": \"ラフレシア\",\n      \"chinese\": \"霸王花\"\n    },\n    \"type\": [\n      \"Grass\",\n      \"Poison\"\n    ],\n    \"base\": {\n      \"HP\": 75,\n      \"Attack\": 80,\n      \"Defence\": 85,\n      \"SpAttack\": 110,\n      \"SpDefence\": 90,\n      \"Speed\": 50\n    }\n  },\n  {\n    \"id\": 46,\n    \"name\": {\n      \"english\": \"Paras\",\n      \"japanese\": \"パラス\",\n      \"chinese\": \"派拉斯\"\n    },\n    \"type\": [\n      \"Bug\",\n      \"Grass\"\n    ],\n    \"base\": {\n      \"HP\": 35,\n      \"Attack\": 70,\n      \"Defence\": 55,\n      \"SpAttack\": 45,\n      \"SpDefence\": 55,\n      \"Speed\": 25\n    }\n  },\n  {\n    \"id\": 47,\n    \"name\": {\n      \"english\": \"Parasect\",\n      \"japanese\": \"パラセクト\",\n      \"chinese\": \"派拉斯特\"\n    },\n    \"type\": [\n      \"Bug\",\n      \"Grass\"\n    ],\n    \"base\": {\n      \"HP\": 60,\n      \"Attack\": 95,\n      \"Defence\": 80,\n      \"SpAttack\": 60,\n      \"SpDefence\": 80,\n      \"Speed\": 30\n    }\n  },\n  {\n    \"id\": 48,\n    \"name\": {\n      \"english\": \"Venonat\",\n      \"japanese\": \"コンパン\",\n      \"chinese\": \"毛球\"\n    },\n    \"type\": [\n      \"Bug\",\n      \"Poison\"\n    ],\n    \"base\": {\n      \"HP\": 60,\n      \"Attack\": 55,\n      \"Defence\": 50,\n      \"SpAttack\": 40,\n      \"SpDefence\": 55,\n      \"Speed\": 45\n    }\n  },\n  {\n    \"id\": 49,\n    \"name\": {\n      \"english\": \"Venomoth\",\n      \"japanese\": \"モルフォン\",\n      \"chinese\": \"摩鲁蛾\"\n    },\n    \"type\": [\n      \"Bug\",\n      \"Poison\"\n    ],\n    \"base\": {\n      \"HP\": 70,\n      \"Attack\": 65,\n      \"Defence\": 60,\n      \"SpAttack\": 90,\n      \"SpDefence\": 75,\n      \"Speed\": 90\n    }\n  },\n  {\n    \"id\": 50,\n    \"name\": {\n      \"english\": \"Diglett\",\n      \"japanese\": \"ディグダ\",\n      \"chinese\": \"地鼠\"\n    },\n    \"type\": [\n      \"Ground\"\n    ],\n    \"base\": {\n      \"HP\": 10,\n      \"Attack\": 55,\n      \"Defence\": 25,\n      \"SpAttack\": 35,\n      \"SpDefence\": 45,\n      \"Speed\": 95\n    }\n  },\n  {\n    \"id\": 51,\n    \"name\": {\n      \"english\": \"Dugtrio\",\n      \"japanese\": \"ダグトリオ\",\n      \"chinese\": \"三地鼠\"\n    },\n    \"type\": [\n      \"Ground\"\n    ],\n    \"base\": {\n      \"HP\": 35,\n      \"Attack\": 100,\n      \"Defence\": 50,\n      \"SpAttack\": 50,\n      \"SpDefence\": 70,\n      \"Speed\": 120\n    }\n  }\n]\n\nexport default POKEMON;\n","import React from \"react\";\nimport \"./PokemonType.css\"\n\nconst getTypeClassName = (type) => { //\"fire\", \"water\" etc\n    switch(type.toLowerCase()) {\n        case \"fire\": \n            return \"fire\";\n        case \"water\": \n            return \"water\";\n        case \"grass\": \n            return \"grass\";\n        case \"poison\":\n            return \"poison\";\n        case \"bug\":\n            return \"bug\";\n        case \"flying\":\n            return \"flying\";\n        default:\n            return \"default\";\n    }\n}\n\nexport const PokemonType = ({ type : aSingleType }) => {\n    return (<span className={`pokemon-card__type ${getTypeClassName(aSingleType)}`}>\n        {aSingleType}\n        </span>);\n        }","import React from \"react\";\nimport \"./PokemonCard.css\";\nimport { PokemonType } from \"./PokemonType.js\";\nimport \"./PokemonType.css\";\n\nfunction PokemonCard({ pokemon }) {\n  const { id, name, type, base } = pokemon;\n  return (\n    <div className=\"pokemon-card\">\n      <div className=\"pokemon-card__div\">\n        <img\n          className=\"pokemon-card__image\"\n          src={`${process.env.PUBLIC_URL}/pokemonImage/${id}.png`}\n          alt={name.english}\n        ></img>\n      </div>\n      <div className=\"pokemon-card__name\">{name.english}</div>\n      <div className=\"pokemon-card__type\">\n        {type.map(t => (\n          <PokemonType key={t} type={t}></PokemonType>\n        ))}\n      </div>\n      {Object.entries(base).map(eachBase => {\n        return (\n          <p key={eachBase[0]} className=\"pokemon-card__base\">\n            {eachBase[0] + \": \" + eachBase[1]}\n          </p>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default PokemonCard;\n","import React from \"react\";\n\nconst SearchBox = ({ value, onChange }) => {\n  return (\n    <div>\n      Search: <input type=\"text\" value={value} onChange={onChange} />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\nimport pokemonData from \"../pokemon/pokemon\";\nimport PokemonCard from \"../PokemonCard\";\nimport SearchBox from \"./SearchBox\";\nimport \"./PokemonGallery.css\";\n\nclass PokemonGallery extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchText: \"\",\n    };\n  }\n\n  changeSearchText = event => {\n    this.setState({\n      searchText: event.target.value,\n    });\n  };\n\n  getFilteredPokemon(pokemonData, searchText) {\n    const filteredPokemon = pokemonData.filter(aPokemon =>\n      aPokemon.name.english.toLowerCase().startsWith(searchText.toLowerCase()),\n    );\n\n    return filteredPokemon;\n  }\n\n  render() {\n    const filteredPokemon = this.getFilteredPokemon(\n      pokemonData,\n      this.state.searchText,\n    );\n\n    return (\n      <div>\n        <div>\n          <h1 className=\"pokemon_gallery__title\">Pokedex</h1>\n          <SearchBox\n            value={this.state.searchText}\n            onChange={this.changeSearchText}\n          />\n          <br></br>\n        </div>\n        <div></div>\n        <div className=\"pokemon-gallery\">\n          {filteredPokemon.map(p => {\n            return <PokemonCard key={p.id} pokemon={p} />;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PokemonGallery;\n","import React from \"react\";\nimport \"./App.css\";\nimport PokemonGallery from \"./components/PokemonGallery\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PokemonGallery />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}